@model IEnumerable<ShoppingCart.Web.Category>
<head>
    <script src="//cdn.rawgit.com/rainabba/jquery-table2excel/1.1.0/dist/jquery.table2excel.min.js"></script>
    @*<script src="https://cdn.datatables.net/1.10.19/js/dataTables.bootstrap4.min.js"></script>
        <link rel="stylesheet" href="https://cdn.datatables.net/1.10.19/css/dataTables.bootstrap4.min.css" />*@
</head>
<div class="clearfix">
    <div class="pull-left" style="font-size: 26px;">Categories</div>
    <div></div>
    <div class="pull-right">
        <a class="btn bg-blue" href="Category/Create"><i class="fa fa-plus-square"></i> Add New</a>
        <button type="button" class="btn bg-olive" data-toggle="modal" data-target="#myModal">
            <i class="fa fa-download"></i> Import
        </button>
        <button type="button" class="btn btn-success" id="btnExportData">
            <i class="fa fa-upload"></i>
            Export
        </button>
    </div>
</div>

<div class="panel-body">
    <table class="table" id="adminCategoriesTable">
        <thead>
            <tr class="tableHeader">
                <th>
                    @Html.DisplayNameFor(model => model.CategoryName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CreatedByUser)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.UpdatedByUser)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CreatedDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.UpdatedDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.IsActive)
                </th>

                <th>Action</th>
            </tr>
        </thead>
        @foreach (var item in Model)
        {
            <tr class="text-center">
                <td>
                    @Html.DisplayFor(modelItem => item.CategoryName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreatedByUser)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UpdatedByUser)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreatedDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UpdatedDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsActive)
                </td>
                <td>
                    <a class="btn btn-primary" href="/Admin/Category/Edit/@item.PKCategoryId">
                        <i class="fa fa-pencil" aria-hidden="true"></i> Edit
                    </a>
                    @* @Html.ActionLink("Edit", "Edit", new { id = item.PKCategoryId })
                        |@Html.ActionLink("Details", "Details", new { id = item.PKCategoryId }) |
                            @Html.ActionLink("Delete", "Delete", new { id = item.PKCategoryId })*@
                </td>
            </tr>
        }

    </table>
</div>
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        @using (Html.BeginForm("ImportCategories", "Category", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dissmiss="modal" aria-hidden="true">X</button>
                    <h4 class="modal-title" id="myModalLabel">Import Categories from Excel</h4>
                </div>

                <div class="modal-body">
                    @*<form>*@
                    <div class="form-group">
                        <p>
                            Imported categories are distinguished by ID. If the ID already exists, then its corresponding category will be updated. You should not specify ID (leave 0) for new categories.
                            Import requires a lot of memory resources. That's why it's not recommended to import more than 500 - 1,000 records at once.
                        </p>
                        <div class="col-md-2">
                            <div class="label-wrapper" style="margin-top:10px">
                                <label class="control-label">
                                    Excel file
                                </label>
                            </div>
                        </div>
                        <div class="col-md-10">
                            @*<input type="file" name="postedFile" id="file1" />*@
                            <input type="file" class="form-control" name="postedExcelFile" id="excelfileId" placeholder="Id" />
                        </div>
                    </div>
                    @*</form>*@
                </div>

                <div class="modal-footer">
                    @*<button type="button" class="btn btn-primary" onclick="return Add();">Add</button>*@
                    <button type="submit" class="btn btn-primary">Add</button>
                    <button type="button" class="btn btn-primary" id="btnUpdate" style="display:none;" onclick="Update();">Update</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        }

    </div>
</div>
@if (TempData["Success"] != null)
{
    <div id="myFlashMessageDiv" class="alert alert-success alert-dismissible fade in" style="background-color:#bcf5bc">
        <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
        <strong>Success!</strong> @TempData["Success"].ToString().
    </div>

}
@if (TempData["Error"] != null)
{
    <div id="myFlashMessageDiv" class="alert alert-danger alert-dismissible fade in">
        <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
        <strong>Error!</strong> @TempData["Error"].ToString().
    </div>

}
@section scripts{
    <script>
        $(document).ready(function () {
            $("#myFlashMessageDiv").show().delay(2000).fadeOut();

            var wed = $('#adminCategoriesTable').DataTable({
                bSort: true,

                'aoColumns': [
                    { sWidth: "25%", bSearchable: true, bSortable: true, className: "dt-left" },
                    { sWidth: "20%", bSearchable: true, bSortable: true, className: "dt-left" },
                    { sWidth: "10%", bSearchable: true, bSortable: true, className: "dt-left" },
                    { sWidth: "22%", bSearchable: true, bSortable: true, className: "dt-left" },
                    { sWidth: "22%", bSearchable: true, bSortable: true, className: "dt-left" },
                    { sWidth: "10%", bSearchable: true, bSortable: true },
                    { sWidth: "45%", bSearchable: true, bSortable: true },
                    //{ sWidth: "10%", bSearchable: true, bSortable: true },
                    //match the number of columns here for table1
                ],
                "bAutoWidth": false,
                "aLengthMenu": [[5, 10, 25, -1], [5, 10, 25, "All"]],
                "info": true,
                "paging": true,
                "fnInitComplete": function () {

                    $("#adminCategoriesTable").css("width", "100%");
                }
            });

            $('#btnExportData').click(function () {
                $("#adminCategoriesTable").table2excel({
                    // exclude: ".excludeThisClass",
                    //name: "Worksheet Name",
                    filename: "SomeFile.xls" //do not include extension
                    //fnExcelReport();
                });
            });
            function fnExcelReport() {
                var tab_text = $('#adminCategoriesTable').val();

                txtArea1.document.open("txt/html", "replace");
                txtArea1.document.write(tab_text);
                txtArea1.document.close();
                txtArea1.focus();
                sa = txtArea1.document.execCommand("SaveAs", true, "Say Thanks to Sumit.xls");

            }
        })
    </script>
}