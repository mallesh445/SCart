@model ShoppingCart.Web.Product

@{
    ViewBag.Title = "Edit Product";
}
<div class="panel-body">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal panel-body">
            <h4>@ViewBag.Title - @Html.DisplayTextFor(model=>model.ProductName)</h4>
            <hr />
            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.PKProductId)
            @Html.HiddenFor(model => model.CreatedDate)
            @Html.HiddenFor(model => model.FKCreatedByUserId)

            <div class="form-group">
                @Html.LabelFor(model => model.FKCategoryId, "Category", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("FKCategoryId")
                    @Html.ValidationMessageFor(model => model.FKCategoryId)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FKSubCategoryId, "SubCategory", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.DropDownList("FKSubCategoryId")*@
                    @Html.DropDownList(model => model.FKSubCategoryId,Model.FKSubCategoryId, "select list", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.FKSubCategoryId)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ProductName, new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProductName)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control  offset-2" } })
                    @Html.ValidationMessageFor(model => model.Description)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Quantity, new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control  offset-2" } })
                    @Html.ValidationMessageFor(model => model.Quantity)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Price, new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control  offset-2" } })
                    @Html.ValidationMessageFor(model => model.Price)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IsActive, new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control  offset-2" } })
                    @Html.ValidationMessageFor(model => model.IsActive)
                </div>
            </div>
            <div>
                <input type="submit" value="Edit product images" name="btnEdit" />
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>
        </div>
    }
</div>
@section scripts
{
    <script>
        $(document).ready(function () {
            $('#FKCategoryId').change(function (e) {
                var id = $(this).val();
                $.ajax({
                    url: "../GetSubCategories",
                    data: { id: id },
                    type: "GET"
                }).success(function (data) {

                    $("#FKSubCategoryId").empty();
                    $.each(data, function (key, value) {
                        $("#FKSubCategoryId").append($("<option></option>").val(value.PKSubCategoryId).html(value.SubCategoryName));
                    });
                })
            })
            $('#FKCategoryId').trigger('change');
        })
    </script>
}
